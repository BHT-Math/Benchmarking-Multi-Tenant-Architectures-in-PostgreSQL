apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  name: bexhoma-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: shared
---
apiVersion: v1
kind: Service
metadata:
  labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  name: bexhoma-service
spec:
  ports:
  - {port: 9091, protocol: TCP, name: port-dbms, targetPort: 5432}
  - {port: 9300, protocol: TCP, name: port-monitoring, targetPort: 9300}
  - {port: 9500, protocol: TCP, name: port-monitoring-application, targetPort: 9187}
  selector: {app: bexhoma, component: sut, configuration: default, experiment: default}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  name: bexhoma-deployment-postgres
spec:
  replicas: 1
  selector:
    matchLabels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  template:
    metadata:
      labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
    spec:
      automountServiceAccountToken: false
      imagePullSecrets:
      - {name: dockerhub}
      nodeSelector:
      tolerations:
      #- key: "nvidia.com/gpu"
      #  effect: "NoSchedule"
      terminationGracePeriodSeconds: 180
      #priorityClassName: important
      containers:
      - name: dbms
        image: postgres:16.1
        #image: postgres:18beta1-alpine
        #image: postgres:16.9
        env:
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        # pg_ctl: cannot be run as root
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo 'Hello from the postStart handler' > /usr/share/message && cat /usr/share/message"]
          preStop:
            exec:
              #command: ["/bin/sh", "-c", "gosu postgres pg_ctl stop -D /var/lib/postgresql/data -m fast"]
              #command: ["/bin/sh", "-c", "gosu postgres pg_ctl stop -m fast"]
              #command: ["echo 'PRESTOP' ;", "/bin/sh", "-c", "gosu postgres pg_ctl stop -m smart -t 120"]
              #command: ["/bin/sh", "-c", "echo 'Hello from the preStop handler'; gosu postgres pg_ctl stop -m smart -t 120"]
              #command: ["gosu postgres", "pg_ctl stop -m smart -t 120"]
              #command: ["/bin/sh", "-c"]
              #args: ["gosu postgres pg_ctl stop -m smart -t 120"]
              #command: ["/bin/sh", "-c", "gosu postgres 'pg_ctl stop -m smart -t 120'"]
              #command: ["/bin/sh", "-c", "gosu postgres '/usr/lib/postgresql/16/bin/pg_ctl stop -m smart -t 120'"]
              #command: ["/bin/sh -c 'gosu postgres /usr/lib/postgresql/16/bin/pg_ctl stop -m smart -t 120'"]
              command: ["/bin/sh", "-c", "gosu postgres /usr/lib/postgresql/16/bin/pg_ctl stop -m smart -t 120"]
              #command: ["/bin/sh", "-c", "echo 'Hello from the preStop handler' > /usr/share/message && cat /usr/share/message"]
        #command: ["sh", "-c", "trap 'gosu postgres pg_ctl stop -m smart' SIGTERM; gosu postgres postgres"] # trap: SIGTERM: bad trap
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - "-c"
              - >
                if pg_isready -h localhost -p 5432 -U postgres > /dev/null; then
                  recovery_status=$(psql -h localhost -p 5432 -U postgres -t -c "SELECT pg_is_in_recovery();" | xargs);
                  [ "$recovery_status" = "f" ] && exit 0 || exit 1;
                else
                  exit 1;
                fi
            #command:
            #- pg_isready
            #- -U
            #- postgres
          initialDelaySeconds: 15
          periodSeconds: 60
          successThreshold: 3
        ports:
        - {containerPort: 5432}
        securityContext:
          allowPrivilegeEscalation: false
          #runAsNonRoot: true
          #runAsUser: 1000
          #runAsGroup: 1000
          #capabilities:
          #  drop:
          #    - ALL
          #readOnlyRootFilesystem: true #could not create lock file "/var/run/postgresql/.s.PGSQL.5432.lock": Read-only file system
        resources:
          limits: {cpu: 16000m, memory: 50Gi}
          requests: {cpu: 1000m, memory: 50Gi}
          #, ephemeral-storage: "50Gi"}
        volumeMounts:
        - {mountPath: /data, name: benchmark-data-volume}
        - {mountPath: /dev/shm, name: dshm}
        - {mountPath: /var/lib/postgresql/data, name: benchmark-storage-volume}
        #- {mountPath: /var/lib/postgresql/data, name: benchmark-storage-volume-ramdisk}
        args:
          - -c
          - max_worker_processes=64
          - -c
          - max_parallel_workers=64
          - -c
          - max_parallel_workers_per_gather=64
          - -c
          - max_parallel_maintenance_workers=64
          - -c
          - max_wal_size=32GB
          - -c
          - shared_buffers=64GB
          - -c
          - max_connections=2048
          - -c
          - autovacuum_max_workers=10
          - -c
          - autovacuum_vacuum_cost_limit=3000
          - -c
          - vacuum_cost_limit=1000
          - -c
          - checkpoint_completion_target=0.9
          - -c
          - cpu_tuple_cost=0.03
          - -c
          - effective_cache_size=64GB
          - -c
          - maintenance_work_mem=2GB
          - -c
          - wal_buffers=1GB
          - -c
          - work_mem=32GB
          - -c
          - temp_buffers=4GB
          - -c
          - autovacuum_work_mem=-1
          - -c
          - max_stack_depth=7MB
          - -c
          - max_files_per_process=4000
          - -c
          - effective_io_concurrency=32
          - -c
          - wal_level=minimal
          - -c
          - max_wal_senders=0
          - -c
          - synchronous_commit=off
          - -c
          - checkpoint_timeout=1h
          - -c
          - checkpoint_warning=0
          - -c
          - autovacuum=off
          - -c
          - max_locks_per_transaction=64
          - -c
          - max_pred_locks_per_transaction=64
          - -c
          - default_statistics_target=1000
          - -c
          - random_page_cost=60
      - name: monitor-application
        image: quay.io/prometheuscommunity/postgres-exporter:v0.17.1 #v0.15.0
        command: ["postgres_exporter"] #, "--auto-discover-databases"]
        env:
          - name: DATA_SOURCE_URI
            value: "localhost:5432/?sslmode=disable"
          - name: DATA_SOURCE_USER
            value: "postgres"
          - name: DATA_SOURCE_PASS
            value: ""
          #- name: PG_EXPORTER_AUTO_DISCOVER_DATABASES
          #  value: "true"
          #- name: DATA_SOURCE_URI
          #  value: "postgresql://user:password@/postgres?host=/var/run/postgresql"
        ports:
          - containerPort: 9187
        resources:
          requests: {cpu: 1000m, memory: 4Gi}
          limits: {cpu: 1000m, memory: 4Gi}
      volumes:
      - name: benchmark-data-volume
        persistentVolumeClaim: {claimName: bexhoma-data}
      - name: benchmark-storage-volume
        persistentVolumeClaim: {claimName: bexhoma-storage}
      #- { name: benchmark-storage-volume-ramdisk, emptyDir: { sizeLimit: 50Gi, medium: Memory } }
      - name: rootfs
        hostPath:
          path: /
      - name: var-run
        hostPath:
          path: /var/run
      - name: sys
        hostPath:
          path: /sys
      - name: docker
        hostPath:
          path: /var/lib/docker
      - name: disk
        hostPath:
          path: /dev/disk
      - name: dshm
        emptyDir:
          medium: Memory
